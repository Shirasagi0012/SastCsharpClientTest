<Page
    x:Class="SastCsharpClientTest.Views.WelcomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SastCsharpClientTest.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="WelcomePage"
    d:DesignHeight="450"
    d:DesignWidth="640"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="40" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="1" Style="{StaticResource PageTitle}">Welcome to Sast C# Client Test!</TextBlock>
        <FlowDocumentPageViewer Grid.Row="2">
            <FlowDocument ColumnWidth="500" IsEnabled="False">
                <Paragraph Style="{StaticResource SmallParagraph}">
                    <Underline FontSize="20">Guide</Underline>
                    <LineBreak />
                    <Bold>如果你成功看到此界面，你已经超越80%的人了！请继续努力！</Bold>
                </Paragraph>
                <Paragraph Style="{StaticResource SmallParagraph}">
                    <Run>WPF是一种强大的客户端应用程序开发框架，它间接促成了C#在上位机开发与ERP管理系统方向上的广泛应用。</Run>
                </Paragraph>
                <Paragraph Style="{StaticResource SmallParagraph}">
                    <Run>如页面上所示，在导航栏上有</Run>
                    <Bold>Home</Bold>
                    <Run>、</Run>
                    <Bold>Friend</Bold>
                    <Run>与</Run>
                    <Bold>Help</Bold>
                    <Run>三个标签。</Run>
                    <LineBreak />
                    <Run>在</Run>
                    <Bold>Friend</Bold>
                    <Run>页面中，有三条Friend记录，通过</Run>
                    <Bold>ComboBox</Bold>
                    <Run>以选择。</Run>
                    <LineBreak />
                    <Run>在选中Friend的情况下，你可以通过</Run>
                    <Bold>Edit</Bold>
                    <Run>以临时修改Friend的信息。</Run>
                </Paragraph>
                <Paragraph BreakPageBefore="True" Style="{StaticResource SmallParagraph}">
                    <Underline FontSize="20">Basic Task （必选题）</Underline>
                </Paragraph>
                <Paragraph LineHeight="30" Style="{StaticResource SmallParagraph}">
                    <Bold>①</Bold>
                    <Run>目前，Friends的信息都保存在Json文件中，请你添加</Run>
                    <Bold>Save</Bold>
                    <Run>的功能，将信息更改保存至文件中。</Run>
                    <Run>（你可以选择适当更改</Run>
                    <Bold>Edit</Bold>
                    <Run>的实现逻辑）</Run>
                </Paragraph>
                <Paragraph LineHeight="30" Style="{StaticResource SmallParagraph}">
                    <Bold>② MVVM</Bold>
                    <Run>是一种重要的架构模式，最早由Microsoft应用于WPF中，于后来在前端领域（如Vue.js）中广泛使用。</Run>
                    <LineBreak />
                    <Run>目前，该程序的页面架构采用的是基于Event的</Run>
                    <Bold>MVC</Bold>
                    <Run>模式，界面与数据深度耦合。请基于已创建好的</Run>
                    <Bold>ViewModels</Bold>
                    <Run>文件夹，实现</Run>
                    <Bold>MVVM</Bold>
                    <Run>模式的</Run>
                    <Bold>数据绑定</Bold>
                    <Run>。</Run>
                    <Run>（可以自行实现WPF接口，或使用官方主流库）</Run>
                </Paragraph>
                <Paragraph LineHeight="30" Style="{StaticResource SmallParagraph}">
                    <Bold>③</Bold>
                    <Run>在上述功能正常的前提下，请添加一条或数条你喜欢的Friend。</Run>
                </Paragraph>
                <Paragraph BreakPageBefore="True" Style="{StaticResource SmallParagraph}">
                    <Underline FontSize="20">Bonus Task （附加题）</Underline>
                </Paragraph>
                <Paragraph Style="{StaticResource SmallParagraph}">
                    <Bold>命令绑定</Bold>
                    <Run>（Command Binding）是WPF中常见的将逻辑与界面解耦的方式。它是WPF中</Run>
                    <Bold>MVVM</Bold>
                    <Run>模式的重要组成部分。</Run>
                    <Run>请使用</Run>
                    <Bold>命令绑定</Bold>
                    <Run>将界面与逻辑解耦。</Run>
                    <Run>（可以自行实现WPF接口，或使用官方主流库）</Run>
                </Paragraph>
                <Paragraph Style="{StaticResource SmallParagraph}">
                    <Run>值得注意的是，</Run>
                    <Bold>Button</Bold>
                    <Run>控件自带</Run>
                    <Bold>Command</Bold>
                    <Run>属性，这使点击按钮的逻辑天然支持</Run>
                    <Bold>命令绑定</Bold>
                    <Run>。</Run>
                    <Run>当</Run>
                    <Bold>Button</Bold>
                    <Run>以外的控件（如本项目中的</Run>
                    <Bold>ComboBox</Bold>
                    <Run>控件）需要实现</Run>
                    <Bold>命令绑定</Bold>
                    <Run>时，应该如何做呢？</Run>

                </Paragraph>
            </FlowDocument>
        </FlowDocumentPageViewer>
        <TextBlock Grid.Row="2" VerticalAlignment="Bottom">© 2023 - SastCsharpClientTest</TextBlock>
    </Grid>
</Page>
